
const dataURL = `/data.json`;

const {renderElement, createElement} = window.utils;

const container = document.querySelector(`.catalog`);
const loadingAlert = document.querySelector(`.loading-notification`);
const sortingForm = document.querySelector(`.sort-list-form`);
const filtersForms = document.querySelectorAll(`.filter-form`);

const characteristicsRu = {
  type: {
    any: `–ª—é–±–æ–π`,
    sedan: `—Å–µ–¥–∞–Ω`,
    estate: `—É–Ω–∏–≤–µ—Ä—Å–∞–ª`,
    hatchback: `—Ö—ç—Ç—á–±–µ–∫`,
    suv: `–≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫`,
    coupe: `–∫—É–ø–µ`,
    cabriolet: `–∫–∞–±—Ä–∏–æ–ª–µ—Ç`
  },
  engine: {
    all: `–≤—Å–µ`,
    gas: `–±–µ–Ω–∑–∏–Ω`,
    diesel: `–¥–∏–∑–µ–ª—å`,
    electric: `—ç–ª–µ–∫—Ç—Ä–æ`
  }
};

const makeImages = (images, imgAlt) => images.map((url) =>
  `<img src="${url}" class="carousel__img" alt="${imgAlt}">`
).join(``);

const createCarouselElement = (images, imgAlt) => `<div class="carousel">
  <div class="carousel__list carousel__list--scroll">
    ${makeImages(images, imgAlt)}
  </div>
</div>`;

const createCarElement = ({brand, model, images, minPrice, mileage, characteristics}) => `<article class="catalog-item">
  <h3 class="catalog-item__title"><a href="#">${brand} ${model}</a></h3>
  <p class="catalog-item__price">–æ—Ç ${minPrice} ‚ÇΩ / –º–µ—Å.</p>
  ${createCarouselElement(images, `${brand} ${model}`)}
  <dl class="catalog-item__mileage">
    <dt class="catalog-item__mileage-title">–ü—Ä–æ–±–µ–≥</dt>
    ${!mileage.month ? `` : `<dd class="catalog-item__milage-tariff">–≤ –º–µ—Å—è—Ü ${mileage.month} –∫–º,</dd>`}
    ${!mileage.halfYear ? `` : `<dd class="catalog-item__milage-tariff">–ø–æ–ª–≥–æ–¥–∞ ${mileage.halfYear} –∫–º,</dd>`}
    ${!mileage.halfYear ? `` : `<dd class="catalog-item__milage-tariff">–≥–æ–¥ ${mileage.year} –∫–º</dd>`}
  </dl>
  <ul class="catalog-item__characteristics">
    ${!characteristics.type ? `` : `<li>${characteristicsRu.type[characteristics.type]}</li>`}
    ${!characteristics.engine ? `` : `<li>${characteristicsRu.engine[characteristics.engine]}</li>`}
    ${!characteristics.power ? `` : `<li>${characteristics.power} –ª.—Å.</li>`}
  </ul>
</article>`;

const makeCarsRendered = (data) => {
  container.textContent = ``;

  const filteredData = window.filterAll(
      data,
      document.querySelector(`input[name=type]:checked`).id,
      document.querySelector(`input[name=power]:checked`).id,
      document.querySelector(`input[name=fuel]:checked`).id,
      +document.querySelector(`input[name=price]`).value,
      document.querySelector(`input[name=class]:checked`).id
  );

  if (!filteredData.length) {
    renderElement(container, (createElement(`<section class="error-notification notification alert">
      <h2 class="error-notification__title">¬Ø\\_(„ÉÑ)_/¬Ø –°–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã</h2>
      <p class="notification__description">–ü–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–∏ –æ–¥–∏–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–º—è–≥—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä</p>
    </section>`)));
    return;
  }

  const sortedData = window.sortData(filteredData, document.querySelector(`input[name=sort]:checked`).id);

  sortedData.forEach((element) => {
    const html = createElement(createCarElement(element));
    renderElement(container, html);
  });

  const carousels = document.querySelectorAll(`.carousel`);

  carousels.forEach((element) => {
    new window.Carousel(element).init();
  });
};

window.getData(dataURL)
  .then((data) => {
    makeCarsRendered(data);
    window.data = data;
  })
  .catch(() => {
    container.before(createElement(`<section class="error-notification notification alert">
    <h2 class="error-notification__title">¬Ø\\_(„ÉÑ)_/¬Ø –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
    <p class="notification__description">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∞–π—Ç</p>
  </section>`));
  })
  .finally(() => loadingAlert.remove());

filtersForms.forEach((form) => {
  form.addEventListener(`change`, () => {
    makeCarsRendered(window.data);
  });
});

sortingForm.addEventListener(`change`, () => {
  makeCarsRendered(window.data);
});

window.addEventListener(`offline`, () => {
  container.before(createElement(`<section class="offline-notification notification">
  <h3 class="offline-notification__title">üì¥ –û—Ñ–ª–∞–π–Ω</h3>
  <p class="notification__description">–ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–∞–π—Ñ–∞—é –∏–ª–∏ –∫ —Å–µ—Ç–∏.</p>
</section>`));
});

window.addEventListener(`online`, () => {
  document.querySelector(`.offline-notification`).remove();
});
